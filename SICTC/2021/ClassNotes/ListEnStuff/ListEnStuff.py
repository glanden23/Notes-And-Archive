from tkinter.constants import X


string_list = ["W", "or", "l", "d!"]
int_list = [5, 15, -67, 191, 88, -23]
float_list = [2.2, -101.9, 60.0]
boolean_list = [False, False, True, False, True]
mixed_list = ["Hello", 2, "the", string_list]
empty = []

"""print(string_list)
print(mixed_list)
print(empty)"""

'''
Data Types: 
    Booleans        Primitive
    Int             Primitive
    FLoat           Primitive
    Strings         Sequence or Non-Primitive
    Array(List)     Sequence or Non-Primitive
'''

alpha="abcdefghijklmnopqrstuvwxyz"
#print(alpha[10])
#print(alpha[0])
#print(alpha[19])
#print(alpha[23]+alpha[24]+alpha[25])
#print(alpha[23:])
#alpha[start:stop]
#print(alpha[8:11])
#print(alpha[-1]) # get the last item
#print(alpha[-2]) #get the second to last item
#alpha[start:end:step]
#print(alpha[0:20:2])
#print(alpha[:26:5])
#print(alpha[:::2]) Dont do this.
#print(alpha[25:-1:-1]) #backwards

alpha=["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]
alphaString="abcdefghijklmnopqrstuvwxyz"

#print(alpha)
#print(alphaString)
#print(alpha[19]+alpha[14]+alpha[24])
#print(alpha[8:11])
#print(alphaString[8:11])
"""print(alpha[7]+alpha[4]+alpha[11]+alpha[11]+alpha[14]+" "+alpha[22]+alpha[14]+alpha[17]+alpha[11]+alpha[3])

for x in alpha:
    print(x + " - " + str(alpha.index(x)))

def getAlpha():
    UI = input("What letter are you trying to get? >>> ")
    print(alpha.index(UI))
    getAlpha()
getAlpha()"""

#randoNumbas=[28,36,13,52,4,23,26,89,84,41,26,100,100,15,69,50,25,11,37,20,14,10,20,28,66,25,1,97,78,41,30,71,26,20,70,29,62,79,8,96,68,66,61,40,61,25,25,68,80,21,32,13,8,36,27,17,90,36,28,93,11,32,36,48,41,33,79,59,73,77,38,11,98,15,61,93,96,81,10,58,11,55,71,84,40,36,7,91,19,65,5,10,47,16,43,39,19,53,1,89,2,75,46,55,36,26,3,16,51,31,19,39,1,85,51,81,39,26,64,57,54,52,19,45,2,68,30,41,67,15,52,27,50,8,17,20,75,75,21,60,64,57,28,74,40,53,0,87,70,52,75,59,14,5,23,36,88,94,72,92,71,41,74,22,61,100,86,93,22,89,66,86,86,96,4,48,14,42,71,21,22,30,53,16,46,18,22,65,99,9,10,93,26,47,59,20,50,86,46,4,83,68,42,80,85,79,2,74,64,20,55,49,79,98,81,0,84,82,58,57,77,91,48,69,53,98,85,62,25,10,27,46,81,42,65,81,57,6,95,41,5,65,16,55,39,62,32,37,84,71,5,12,55,95,70,69,90,67,41,88,77,29,29,46,14,96,25,13,46,4,62,97,61,1,26,75,9,93,41,47,31,24,69,66,65,73,41,89,78,12,56,80,58,44,63,85,12,64,98,36,51,40,49,36,5,1,46,71,94,26,14,29,37,53,29,20,4,3,86,10,64,13,65,59,93,72,47,83,24,91,34,99,18,84,18,79,87,10,36,31,96,100,42,14,37,35,21,58,72,54,0,71,63,99,24,64,95,81,56,95,25,41,60,53,99,42,62,44,26,26,6,70,53,56,74,21,77,85,26,20,22,36,99,0,64,6,75,67,36,93,92,96,98,81,32,33,96,4,23,34,25,10,6,7,80,53,21,95,53,19,45,30,33,80,42,19,34,61,79,9,95,39,1,31,40,24,70,31,12,32,5,88,30,90,44,60,83,100,41,19,52,0,87,47,91,75,53,97,63,37,50,50,48,62,72,89,55,93,23,24,98,47,72,52,53,72,35,67,65,2,23,66,22,7,11,20,52,42,95,70,69,40,93,21,20,13,45,52,75,20,62,17,46,74,10,24,98,86,91,96,36,68,75,41,100,3,73,30,88,37,33,58,89,78,92,18,74,80,19,56,9,14,34,48,85,86,50,95,99,64,71,7,53,81,61,13,99,7,79,14,86,79,42,49,18,86,82,64,69,84,60,86,6,52,14,13,28,72,94,43,76,85,98,83,1,18,13,26,100,51,7,29,4,27,63,47,73,58,64,12,77,79,77,32,16,86,69,11,57,75,83,84,52,15,15,71,21,91,60,17,3,17,86,35,94,79,9,18,92,89,10,96,49,63,71,19,1,23,20,82,91,4,14,3,73,13,74,56,50,31,9,22,55,98,19,45,80,58,18,48,13,90,26,88,94,84,79,25,50,83,38,97,25,12,0,24,52,91,69,68,58,53,1,28,98,2,92,48,64,80,75,79,9,13,92,21,54,43,38,51,59,29,85,89,6,64,47,19,0,84,65,55,51,92,5,38,69,33,51,92,70,38,2,100,83,65,55,45,11,40,70,66,59,91,99,80,22,57,96,39,5,36,25,8,69,30,57,22,26,2,60,41,10,35,68,37,12,45,81,27,52,67,78,15,86,99,6,19,39,58,11,71,19,12,36,33,27,100,33,74,32,17,65,5,35,17,70,31,69,23,78,76,39,93,0,53,66,34,77,34,97,64,98,55,63,9,94,46,13,85,88,30,81,77,69,37,70,94,72,69,2,5,86,54,10,3,71,88,15,75,90,30,45,31,11,89,99,42,87,2,50,86,89,62,5,57,88,82,86,42,69,14,36,97,39,8,74,67,55,87,59,44,35,60,97,25,2,91,46,37,76,47,30,24,45,7,53,89,27,38,8,65,9,9,23,90,21,35,78,84,68,9,30,11,86,63,23,99,100,26,93,65,87,64,93,96,38,41,51,28,42,74,79,62,65,51,83,17,2,22,31,58,65,21]
#print(randoNumbas.index(7)) looking for certain item in list.

#min max sum of randonumbas 
#https://www.kite.com/python/answers/how-to-find-the-index-of-the-max-value-in-a-list-in-python
#print(max(randoNumbas))
#print(sum(randoNumbas))
#print(min(randoNumbas))
#https://www.geeksforgeeks.org/find-average-list-python/
#print(sum(randoNumbas) / len(randoNumbas))

morse=[".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."]
#print(morse[alpha.index("l")]+morse[alpha.index("a")]+morse[alpha.index("n")]+morse[alpha.index("d")]+morse[alpha.index("e")]+morse[alpha.index("n")])

def turnToMorse():
    UI = input("What would you like to turn into morse code? >>> ").lower()
    morseString = ""
    for x in UI:
        if x == " ":
            morseString = morseString + " "
        elif x.isalpha() == False:
            print("Skipped " + x)
        else:
            morseString = morseString + morse[alpha.index(x)]
    print(morseString)
    turnToMorse()
turnToMorse()